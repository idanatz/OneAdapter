# This is a basic workflow to help you get started with Actions

name: Android CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ github_actions ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  instrumentation-tests:
          name: Instrumentation tests
          runs-on: macOS-latest
          timeout-minutes: 60
          strategy:
              fail-fast: false
              matrix:
                  api-level: [15, 19, 21, 25, 29]
          steps:
              - uses: actions/checkout@v2
              - uses: actions/setup-java@v1
                with:
                    java-version: 1.8

              # Restore the cache.
              # Intentionally don't set 'restore-keys' so the cache never contains redundant dependencies.
              - uses: actions/cache@v2
                with:
                    path: ~/.gradle/caches
                    key: gradle-${{ runner.os }}-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/buildSrc/src/main/kotlin/Library.kt') }}

              - name: Instrumentation tests
                uses: reactivecircus/android-emulator-runner@v2
                with:
                    api-level: ${{ matrix.api-level }}
                    arch: x86
                    script: ./gradlew connectedDebugAndroidTest
